1.lb config => 执行 auto/config 脚本
	lb config noauto ....
2. 执行 auto/build 脚本
	lb build noauto 
为 debian/sid/i386 系统构建配置树

lb bootstrap 
P: Setting up cleanup function

lb bootstrap_cache restore
lb bootstrap_debootstrap 
lb bootstrap_archive-keys 
lb bootstrap_cache save

lb chroot_devpts install
lb chroot_proc install
lb chroot_selinuxfs install
lb chroot_sysfs install
lb chroot_debianchroot install
lb chroot_dpkg install
lb chroot_tmpfs install
lb chroot_sysv-rc install
lb chroot_hosts install
lb chroot_resolv install
lb chroot_hostname install
lb chroot_apt install
lb bootstrap_archives binary

lb chroot_apt remove
lb chroot_hostname remove
lb chroot_resolv remove
lb chroot_hosts remove
lb chroot_sysv-rc remove
lb chroot_tmpfs remove
lb chroot_dpkg remove
lb chroot_debianchroot remove
lb chroot_sysfs remove
lb chroot_selinuxfs remove
lb chroot_proc remove
lb chroot_devpts remove


lb chroot 

lb chroot_cache restore
lb chroot_devpts install
lb chroot_proc install
lb chroot_sysfs install
lb chroot_debianchroot install
lb chroot_dpkg install
lb chroot_tmpfs install
lb chroot_sysv-rc install
lb chroot_hosts install
lb chroot_resolv install
lb chroot_hostname install
lb chroot_apt install
lb chroot_archives chroot install
lb chroot_linux-image 
lb chroot_firmware 
lb chroot_preseed 
lb chroot_package-lists install
lb chroot_install-packages install
	install packages

lb chroot_package-lists live
lb chroot_install-packages live
lb chroot_includes 
lb chroot_hooks 
	exe coustome hooks

lb chroot_hacks 
lb chroot_interactive 
lb chroot_archives chroot remove
lb chroot_apt remove
lb chroot_hostname remove
lb chroot_resolv remove
lb chroot_hosts remove
lb chroot_sysv-rc remove
lb chroot_tmpfs remove
lb chroot_dpkg remove
lb chroot_debianchroot remove
lb chroot_sysfs remove
lb chroot_selinuxfs remove
lb chroot_proc remove
lb chroot_devpts remove
lb chroot_cache save

lb installer 
lb chroot_devpts install
lb chroot_proc install
lb chroot_selinuxfs install
lb chroot_sysfs install
lb chroot_debianchroot install
lb chroot_dpkg install
lb chroot_tmpfs install
lb chroot_sysv-rc install
lb chroot_hosts install
lb chroot_resolv install
lb chroot_hostname install
lb chroot_apt install
lb chroot_archives chroot install

lb installer_debian-installer 
lb installer_preseed 

lb chroot_archives chroot remove
lb chroot_apt remove
lb chroot_hostname remove
lb chroot_resolv remove
lb chroot_hosts remove
lb chroot_sysv-rc remove
lb chroot_tmpfs remove
lb chroot_dpkg remove
lb chroot_debianchroot remove
lb chroot_sysfs remove
lb chroot_selinuxfs remove
lb chroot_proc remove
lb chroot_devpts remove

lb binary 
lb binary_chroot 
lb chroot_devpts install
lb chroot_proc install
lb chroot_selinuxfs install
lb chroot_sysfs install
lb chroot_hosts install
lb chroot_resolv install
lb chroot_hostname install
lb chroot_sysv-rc install
lb chroot_apt install-binary
lb chroot_archives chroot install

lb binary_rootfs 
P: Begin building root filesystem image...
P: Preparing squashfs image...

lb chroot_archives binary remove
lb chroot_apt remove
lb chroot_hostname remove
lb chroot_resolv remove
lb chroot_hosts remove
lb chroot_sysv-rc remove
lb chroot_dpkg remove
lb chroot_debianchroot remove
lb chroot_sysfs remove
lb chroot_selinuxfs remove
lb chroot_proc remove
lb chroot_devpts remove

lb chroot_devpts install
lb chroot_proc install
lb chroot_selinuxfs install
lb chroot_sysfs install
lb chroot_debianchroot install
lb chroot_dpkg install
lb chroot_sysv-rc install
lb chroot_hosts install
lb chroot_resolv install
lb chroot_hostname install
lb chroot_apt install
lb chroot_archives binary install

lb binary_manifest 
lb binary_package-lists 
lb binary_linux-image 
lb binary_memtest 
lb binary_grub-legacy 
lb binary_grub-pc 
lb binary_syslinux 
lb binary_disk 
lb binary_loadlin 
lb binary_win32-loader 
lb binary_includes 
lb binary_hooks 
	executing binary hooks


lb binary_checksums 
P: Begin creating binary md5sum.txt...
lb binary_iso 
P: Begin building binary iso image...
lb binary_netboot 
lb binary_tar 
lb binary_hdd 
lb binary_zsync 

lb chroot_apt remove
lb chroot_hostname remove
lb chroot_resolv remove
lb chroot_hosts remove
lb chroot_sysv-rc remove
lb chroot_dpkg remove
lb chroot_debianchroot remove
lb chroot_sysfs remove
lb chroot_selinuxfs remove
lb chroot_proc remove
lb chroot_devpts remove
lb source




发行版镜像
bootstrap：生成基本系统
chroot：构建最终系统
build time： --mirror-bootstrap   --mirror-chroot-security
	--mirror-chroot 默认取  --mirror-bootstrap 的值

run time：--mirror-binary*

附加镜像（如同使用参数）
config/archives/your-repository.list.chroot 
config/archives/your-repository.list.binary ==> /etc/apt/sources.list.d/

版本锁定
config/archives/your-repository.pref.{binary,chroot}   ==>  /etc/apt/preferences.d/

条件判断
config/package-lists/xxx.list.chroot

	#if ARCHITECTURES amd64
	ia32-libs
	#endif

	#if ARCHITECTURES i386 amd64
	memtest86+
	#endif

	#if ARCHIVE_AREAS contrib non-free
	vrms
	#endif


内核
	 --linux-flavours 指定参数将会自动添加 linux-image- 前缀

第三方软件
	/config/packages.chroot/ 目录下


配置 APT
apt参数
	--apt 

代理
	 --apt-http-proxy http://proxy/

--apt-indices false ：清空/var/lib/apt目录(update缓存)
--apt-recommends false
--apt-options "--yes -oAcquire::Check-Valid-Until=false"  或者  config/apt/apt.conf

版本锁定
	config/archives/*.pref
	config/archives/*.pref.chroot
	config/apt/preferences  
	config/includes.chroot/etc/apt/preferences 

	 config/archives/sid.pref.chroot
		Package: live-*
		Pin: release n=sid
		Pin-Priority: 600
		Package: *
		Pin: release n=sid
		Pin-Priority: 1

HOOKS
	构建脚本
		 config/hooks/live
		config/hooks/normal

	引导脚本
		/lib/live/config/
		
		
		
		
		
https://www.cnblogs.com/varden/p/13925972.html
https://live-team.pages.debian.net/live-manual/html/live-manual/managing-a-configuration.en.html
https://www.cnblogs.com/varden/p/13939898.html
https://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&tid=20		




用于镜像创建时的安装源：

--mirror-bootstrap http://ftp.cn.debian.org/debian/
--mirror-chroot-security http://ftp.cn.debian.org/debian-security/

用于镜像运行时的安装源：

--mirror-binary http://ftp.cn.debian.org/debian/
--mirror-binary-security http://ftp.cn.debian.org/debian-security/
--mirror-binary-backports http://ftp.cn.debian.org/debian-backports/

添加到config/archives/live.list.chroot文件内的安装源在创建镜像时被使用。
添加到config/archives/live.list.binary文件内的安装源会被加入到系统/etc/apt/sources.list.d/目录。
两个文件内容格式如下：

deb http://debian-live.alioth.debian.org/ sid-snapshots main contrib non-free

调整APT节省空间:（可能会带来一些问题）

# 禁用缓存软件索引
--apt-indices false
# 禁用APT推荐功能
--apt-recommends false


Hooks
包含系统创建完后需要执行的脚本。
/usr/share/doc/live-build/examples/hooks

config/hooks/
	*.hook.chroot
	*.hook.binary

/lib/live/config/ --> config/includes.chroot/lib/live/config/


更改默认密码方法(启动时设置用户名密码)：

passwd: /usr/share/doc/live-config/examples/hooks --> config/includes.chroot/lib/live/config/

小结：
1.自动配置脚本目录：auto/config
2.创建镜像时安装的软件所在目录：config/package-lists/
3.自定义镜像内容目录：config/includes.chroot/
4.创建系统后执行的脚本所在目录：config/hooks/
5.自定义引导程序目录：config/bootloaders/
6.自定义Debian Installer：使用--debian-installer live选项，安装debian-installer-launcher包
7.自定义Debian Installer的内容：config/packages.binary/，config/includes.installer/